<!--toadd : equals, hashCode, ....
   deepcopy shallow copy https://www.baeldung.com/java-deep-copy

   failfast, failsafe
deepcpy shallow cpy
lazyload : if null , init else no init

methods common to all objects
SampleJavaExamples  strongweak ref
Integer a = 1000; Integer b = 1000; a==b true, ha a, b = 100 false. Integercacheing

-->

<questionlist>
    <tetel>
        <question>
            thread 1.0 what is, definition real basics
        </question>
        <answer>
            what up
        </answer>
    </tetel>
    <tetel>
        <question>
            javabasic test
        </question>
        <answer>
            javabasic test
        </answer>
    </tetel>
    <tetel>
        <question>
            authentication n authorization
        </question>
        <answer>
            <links>https://iorilan.medium.com/all-you-need-to-know-about-login-sso-ldap-saml-oauth-openid-i-was-recently-asked-this-question-aea8ae47ce2b</links>
        </answer>
    </tetel>
    <tetel>
        <question>
            hashing
        </question>
        <answer>
            - basic : hashing in java,  hashmap ,hashset hash table, how are they implemented, ordos
            - weak hashmap
            <links>https://hn.algolia.com/?q=hashing</links>
        </answer>
    </tetel>
    <tetel>
        <question>
            OOP concepts
        </question>
        <answer>
            answer
        </answer>
    </tetel>
    <tetel>
        <question>
            java concenpts
        </question>
        <answer>
            equals, hashCode
            deepcopy, shallow copy

            failfast, failsafe
            deepcpy shallow cpy
            lazyload : if null , init else no init

            methods common to all objects
            SampleJavaExamples  strongweak ref
            Integer a = 1000; Integer b = 1000; a==b true, ha a, b = 100 false. Integercacheing

            <links>https://www.baeldung.com/java-deep-copy</links>
            <links>https://programming.vip/docs/the-magic-of-strong-and-weak-references-in-java.html</links>
        </answer>
    </tetel>
    <tetel>
        <question>
            java n memory
        </question>
        <answer>
            <links>https://medium.com/nerd-for-tech/java-memory-explained-43de6de157be</links>
            <links>https://programming.vip/docs/the-magic-of-strong-and-weak-references-in-java.html</links>
            <links>https://deepu.tech/memory-management-in-jvm/</links>
            <links>https://iorilan.medium.com/what-exactly-happens-when-you-new-an-object-ea38d9740617</links>
            <links>https://jenkov.com/tutorials/java-concurrency/java-memory-model.html#java-memory-model-tutorial-video</links>
            <images>http://localhost:8080/javabasic/j_mem1.jpg</images>
            <images>http://localhost:8080/javabasic/j_mem2.jpg</images>
            <images>http://localhost:8080/javabasic/JVM_architecture.jpg</images>
        </answer>
    </tetel>
</questionlist>